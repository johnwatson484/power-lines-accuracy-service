// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PowerLinesAccuracyService.Data;

namespace PowerLinesAccuracyService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200614123235_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PowerLinesAccuracyService.Models.Accuracy", b =>
                {
                    b.Property<int>("AccuracyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("accuracyId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Calculated")
                        .HasColumnName("calculated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Division")
                        .HasColumnName("division")
                        .HasColumnType("text");

                    b.Property<int>("LowerRecommended")
                        .HasColumnName("lowerRecommended")
                        .HasColumnType("integer");

                    b.Property<decimal>("LowerRecommendedAccuracy")
                        .HasColumnName("lowerRecommendedAccuracy")
                        .HasColumnType("numeric");

                    b.Property<int>("Matches")
                        .HasColumnName("matches")
                        .HasColumnType("integer");

                    b.Property<int>("Recommended")
                        .HasColumnName("recommended")
                        .HasColumnType("integer");

                    b.Property<decimal>("RecommendedAccuracy")
                        .HasColumnName("recommendedAccuracy")
                        .HasColumnType("numeric");

                    b.HasKey("AccuracyId");

                    b.ToTable("accuracy");
                });

            modelBuilder.Entity("PowerLinesAccuracyService.Models.MatchOdds", b =>
                {
                    b.Property<int>("MatchOddsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("matchOddsId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Away")
                        .HasColumnName("away")
                        .HasColumnType("numeric");

                    b.Property<int>("AwayGoals")
                        .HasColumnName("expectedAwayGoals")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Calculated")
                        .HasColumnName("calculated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Draw")
                        .HasColumnName("draw")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ExpectedGoals")
                        .HasColumnName("expectedGoals")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Home")
                        .HasColumnName("home")
                        .HasColumnType("numeric");

                    b.Property<int>("HomeGoals")
                        .HasColumnName("expectedHomeGoals")
                        .HasColumnType("integer");

                    b.Property<string>("LowerRecommended")
                        .HasColumnName("lowerRecommended")
                        .HasColumnType("text");

                    b.Property<string>("Recommended")
                        .HasColumnName("recommended")
                        .HasColumnType("text");

                    b.Property<int>("ResultId")
                        .HasColumnName("resultId")
                        .HasColumnType("integer");

                    b.HasKey("MatchOddsId");

                    b.HasIndex("ResultId")
                        .IsUnique();

                    b.ToTable("match_odds");
                });

            modelBuilder.Entity("PowerLinesAccuracyService.Models.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resultId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AwayOddsAverage")
                        .HasColumnName("awayOddsAverage")
                        .HasColumnType("numeric");

                    b.Property<string>("AwayTeam")
                        .HasColumnName("awayTeam")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Division")
                        .HasColumnName("division")
                        .HasColumnType("text");

                    b.Property<decimal>("DrawOddsAverage")
                        .HasColumnName("drawOddsAverage")
                        .HasColumnType("numeric");

                    b.Property<int>("FullTimeAwayGoals")
                        .HasColumnName("fullTimeAwayGoals")
                        .HasColumnType("integer");

                    b.Property<int>("FullTimeHomeGoals")
                        .HasColumnName("fullTimeHomeGoals")
                        .HasColumnType("integer");

                    b.Property<string>("FullTimeResult")
                        .HasColumnName("fullTimeResult")
                        .HasColumnType("text");

                    b.Property<int>("HalfTimeAwayGoals")
                        .HasColumnName("halfTimeAwayGoals")
                        .HasColumnType("integer");

                    b.Property<int>("HalfTimeHomeGoals")
                        .HasColumnName("halfTimeHomeGoals")
                        .HasColumnType("integer");

                    b.Property<string>("HalfTimeResult")
                        .HasColumnName("halfTimeResult")
                        .HasColumnType("text");

                    b.Property<decimal>("HomeOddsAverage")
                        .HasColumnName("homeOddsAverage")
                        .HasColumnType("numeric");

                    b.Property<string>("HomeTeam")
                        .HasColumnName("homeTeam")
                        .HasColumnType("text");

                    b.HasKey("ResultId");

                    b.HasIndex("Date", "HomeTeam", "AwayTeam")
                        .IsUnique();

                    b.ToTable("results");
                });

            modelBuilder.Entity("PowerLinesAccuracyService.Models.MatchOdds", b =>
                {
                    b.HasOne("PowerLinesAccuracyService.Models.Result", null)
                        .WithOne("MatchOdds")
                        .HasForeignKey("PowerLinesAccuracyService.Models.MatchOdds", "ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
